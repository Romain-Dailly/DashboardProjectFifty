<?php
/**
 * GeoGasStation
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fifty Truck API
 *
 * This is the API of fifty truck
 *
 * OpenAPI spec version: 0.1.0
 * Contact: contact@fiftytruck.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * GeoGasStation Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GeoGasStation implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GeoGasStation';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'gps_coordinates' => '\Swagger\Client\Model\GeoJsonPoint',
        'on_highway' => 'bool',
        'address' => 'object',
        'services' => 'object',
        'opening_time' => 'object',
        'price_diesel' => 'float',
        'price_sp95' => 'float',
        'price_e85' => 'float',
        'price_gplc' => 'float',
        'price_e10' => 'float',
        'price_sp98' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int64',
        'gps_coordinates' => null,
        'on_highway' => null,
        'address' => null,
        'services' => null,
        'opening_time' => null,
        'price_diesel' => 'float',
        'price_sp95' => 'float',
        'price_e85' => 'float',
        'price_gplc' => 'float',
        'price_e10' => 'float',
        'price_sp98' => 'float'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'gps_coordinates' => 'gps_coordinates',
        'on_highway' => 'on_highway',
        'address' => 'address',
        'services' => 'services',
        'opening_time' => 'opening_time',
        'price_diesel' => 'price_diesel',
        'price_sp95' => 'price_sp95',
        'price_e85' => 'price_e85',
        'price_gplc' => 'price_gplc',
        'price_e10' => 'price_e10',
        'price_sp98' => 'price_sp98'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'gps_coordinates' => 'setGpsCoordinates',
        'on_highway' => 'setOnHighway',
        'address' => 'setAddress',
        'services' => 'setServices',
        'opening_time' => 'setOpeningTime',
        'price_diesel' => 'setPriceDiesel',
        'price_sp95' => 'setPriceSp95',
        'price_e85' => 'setPriceE85',
        'price_gplc' => 'setPriceGplc',
        'price_e10' => 'setPriceE10',
        'price_sp98' => 'setPriceSp98'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'gps_coordinates' => 'getGpsCoordinates',
        'on_highway' => 'getOnHighway',
        'address' => 'getAddress',
        'services' => 'getServices',
        'opening_time' => 'getOpeningTime',
        'price_diesel' => 'getPriceDiesel',
        'price_sp95' => 'getPriceSp95',
        'price_e85' => 'getPriceE85',
        'price_gplc' => 'getPriceGplc',
        'price_e10' => 'getPriceE10',
        'price_sp98' => 'getPriceSp98'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['gps_coordinates'] = isset($data['gps_coordinates']) ? $data['gps_coordinates'] : null;
        $this->container['on_highway'] = isset($data['on_highway']) ? $data['on_highway'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['services'] = isset($data['services']) ? $data['services'] : null;
        $this->container['opening_time'] = isset($data['opening_time']) ? $data['opening_time'] : null;
        $this->container['price_diesel'] = isset($data['price_diesel']) ? $data['price_diesel'] : null;
        $this->container['price_sp95'] = isset($data['price_sp95']) ? $data['price_sp95'] : null;
        $this->container['price_e85'] = isset($data['price_e85']) ? $data['price_e85'] : null;
        $this->container['price_gplc'] = isset($data['price_gplc']) ? $data['price_gplc'] : null;
        $this->container['price_e10'] = isset($data['price_e10']) ? $data['price_e10'] : null;
        $this->container['price_sp98'] = isset($data['price_sp98']) ? $data['price_sp98'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets gps_coordinates
     *
     * @return \Swagger\Client\Model\GeoJsonPoint
     */
    public function getGpsCoordinates()
    {
        return $this->container['gps_coordinates'];
    }

    /**
     * Sets gps_coordinates
     *
     * @param \Swagger\Client\Model\GeoJsonPoint $gps_coordinates gps_coordinates
     *
     * @return $this
     */
    public function setGpsCoordinates($gps_coordinates)
    {
        $this->container['gps_coordinates'] = $gps_coordinates;

        return $this;
    }

    /**
     * Gets on_highway
     *
     * @return bool
     */
    public function getOnHighway()
    {
        return $this->container['on_highway'];
    }

    /**
     * Sets on_highway
     *
     * @param bool $on_highway on_highway
     *
     * @return $this
     */
    public function setOnHighway($on_highway)
    {
        $this->container['on_highway'] = $on_highway;

        return $this;
    }

    /**
     * Gets address
     *
     * @return object
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param object $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets services
     *
     * @return object
     */
    public function getServices()
    {
        return $this->container['services'];
    }

    /**
     * Sets services
     *
     * @param object $services services
     *
     * @return $this
     */
    public function setServices($services)
    {
        $this->container['services'] = $services;

        return $this;
    }

    /**
     * Gets opening_time
     *
     * @return object
     */
    public function getOpeningTime()
    {
        return $this->container['opening_time'];
    }

    /**
     * Sets opening_time
     *
     * @param object $opening_time opening_time
     *
     * @return $this
     */
    public function setOpeningTime($opening_time)
    {
        $this->container['opening_time'] = $opening_time;

        return $this;
    }

    /**
     * Gets price_diesel
     *
     * @return float
     */
    public function getPriceDiesel()
    {
        return $this->container['price_diesel'];
    }

    /**
     * Sets price_diesel
     *
     * @param float $price_diesel price_diesel
     *
     * @return $this
     */
    public function setPriceDiesel($price_diesel)
    {
        $this->container['price_diesel'] = $price_diesel;

        return $this;
    }

    /**
     * Gets price_sp95
     *
     * @return float
     */
    public function getPriceSp95()
    {
        return $this->container['price_sp95'];
    }

    /**
     * Sets price_sp95
     *
     * @param float $price_sp95 price_sp95
     *
     * @return $this
     */
    public function setPriceSp95($price_sp95)
    {
        $this->container['price_sp95'] = $price_sp95;

        return $this;
    }

    /**
     * Gets price_e85
     *
     * @return float
     */
    public function getPriceE85()
    {
        return $this->container['price_e85'];
    }

    /**
     * Sets price_e85
     *
     * @param float $price_e85 price_e85
     *
     * @return $this
     */
    public function setPriceE85($price_e85)
    {
        $this->container['price_e85'] = $price_e85;

        return $this;
    }

    /**
     * Gets price_gplc
     *
     * @return float
     */
    public function getPriceGplc()
    {
        return $this->container['price_gplc'];
    }

    /**
     * Sets price_gplc
     *
     * @param float $price_gplc price_gplc
     *
     * @return $this
     */
    public function setPriceGplc($price_gplc)
    {
        $this->container['price_gplc'] = $price_gplc;

        return $this;
    }

    /**
     * Gets price_e10
     *
     * @return float
     */
    public function getPriceE10()
    {
        return $this->container['price_e10'];
    }

    /**
     * Sets price_e10
     *
     * @param float $price_e10 price_e10
     *
     * @return $this
     */
    public function setPriceE10($price_e10)
    {
        $this->container['price_e10'] = $price_e10;

        return $this;
    }

    /**
     * Gets price_sp98
     *
     * @return float
     */
    public function getPriceSp98()
    {
        return $this->container['price_sp98'];
    }

    /**
     * Sets price_sp98
     *
     * @param float $price_sp98 price_sp98
     *
     * @return $this
     */
    public function setPriceSp98($price_sp98)
    {
        $this->container['price_sp98'] = $price_sp98;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


