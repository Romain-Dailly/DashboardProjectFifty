<?php
/**
 * SeizedShippingOrder
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fifty Truck API
 *
 * This is the API of fifty truck
 *
 * OpenAPI spec version: 0.1.0
 * Contact: contact@fiftytruck.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SeizedShippingOrder Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SeizedShippingOrder implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SeizedShippingOrder';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'operator_id' => 'int',
        'external_id' => 'string',
        'source' => 'string',
        'shipper_company_name' => 'string',
        'shipper_logo' => 'string',
        'shipper_contact_name' => 'string',
        'shipper_contact_phone_number' => 'string',
        'shipper_contact_cellphone_number' => 'string',
        'shipper_contact_fax_number' => 'string',
        'shipper_contact_email' => 'string',
        'shipper_price' => 'float',
        'seized_price' => 'float',
        'product_group' => '\Swagger\Client\Model\ProductGroup',
        'good_type' => 'string',
        'truck_types' => 'string[]',
        'loading_point_contact_first_name' => 'string',
        'loading_point_contact_last_name' => 'string',
        'loading_point_contact_company_name' => 'string',
        'loading_point_contact_phone_number' => 'string',
        'loading_point_contact_cellphone_number' => 'string',
        'loading_point_contact_fax_number' => 'string',
        'loading_point_contact_email' => 'string',
        'loading_point_address_number' => 'string',
        'loading_point_address_street_name' => 'string',
        'loading_point_address_complement' => 'string',
        'loading_point_address_postcode' => 'string',
        'loading_point_address_zone' => 'string',
        'loading_point_address_city' => 'string',
        'loading_point_address_country' => 'string',
        'loading_point_address_country_code' => 'string',
        'loading_point_address_gps_coordinates' => '\Swagger\Client\Model\GeoJsonPoint',
        'loading_point_address_complementary_informations' => 'string',
        'unloading_point_contact_first_name' => 'string',
        'unloading_point_contact_last_name' => 'string',
        'unloading_point_contact_company_name' => 'string',
        'unloading_point_contact_phone_number' => 'string',
        'unloading_point_contact_cellphone_number' => 'string',
        'unloading_point_contact_fax_number' => 'string',
        'unloading_point_contact_email' => 'string',
        'unloading_point_address_number' => 'string',
        'unloading_point_address_street_name' => 'string',
        'unloading_point_address_complement' => 'string',
        'unloading_point_address_postcode' => 'string',
        'unloading_point_address_zone' => 'string',
        'unloading_point_address_city' => 'string',
        'unloading_point_address_country' => 'string',
        'unloading_point_address_country_code' => 'string',
        'unloading_point_address_gps_coordinates' => '\Swagger\Client\Model\GeoJsonPoint',
        'unloading_point_address_complementary_informations' => 'string',
        'picking_date_start' => '\DateTime',
        'picking_date_end' => '\DateTime',
        'picking_time_start' => 'string',
        'picking_time_end' => 'string',
        'desired_delivery_date_start' => 'string',
        'desired_delivery_date_end' => 'string',
        'desired_delivery_time_start' => 'string',
        'desired_delivery_time_end' => 'string',
        'route_with_toll' => '\Swagger\Client\Model\Route',
        'route_without_toll' => '\Swagger\Client\Model\Route',
        'search_context' => '\Swagger\Client\Model\SearchContext',
        'created_at' => '\DateTime',
        'updated_at' => '\DateTime',
        'complementary_informations' => 'object'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int64',
        'operator_id' => 'int64',
        'external_id' => 'string',
        'source' => 'string',
        'shipper_company_name' => 'string',
        'shipper_logo' => 'string',
        'shipper_contact_name' => 'string',
        'shipper_contact_phone_number' => 'string',
        'shipper_contact_cellphone_number' => 'string',
        'shipper_contact_fax_number' => 'string',
        'shipper_contact_email' => 'string',
        'shipper_price' => 'float',
        'seized_price' => 'float',
        'product_group' => null,
        'good_type' => null,
        'truck_types' => null,
        'loading_point_contact_first_name' => 'string',
        'loading_point_contact_last_name' => 'string',
        'loading_point_contact_company_name' => 'string',
        'loading_point_contact_phone_number' => 'string',
        'loading_point_contact_cellphone_number' => 'string',
        'loading_point_contact_fax_number' => 'string',
        'loading_point_contact_email' => 'string',
        'loading_point_address_number' => 'string',
        'loading_point_address_street_name' => 'string',
        'loading_point_address_complement' => 'string',
        'loading_point_address_postcode' => 'string',
        'loading_point_address_zone' => 'string',
        'loading_point_address_city' => 'string',
        'loading_point_address_country' => 'string',
        'loading_point_address_country_code' => null,
        'loading_point_address_gps_coordinates' => null,
        'loading_point_address_complementary_informations' => 'string',
        'unloading_point_contact_first_name' => 'string',
        'unloading_point_contact_last_name' => 'string',
        'unloading_point_contact_company_name' => 'string',
        'unloading_point_contact_phone_number' => 'string',
        'unloading_point_contact_cellphone_number' => 'string',
        'unloading_point_contact_fax_number' => 'string',
        'unloading_point_contact_email' => 'string',
        'unloading_point_address_number' => 'string',
        'unloading_point_address_street_name' => 'string',
        'unloading_point_address_complement' => 'string',
        'unloading_point_address_postcode' => 'string',
        'unloading_point_address_zone' => 'string',
        'unloading_point_address_city' => 'string',
        'unloading_point_address_country' => 'string',
        'unloading_point_address_country_code' => null,
        'unloading_point_address_gps_coordinates' => null,
        'unloading_point_address_complementary_informations' => 'string',
        'picking_date_start' => 'date',
        'picking_date_end' => 'date',
        'picking_time_start' => 'time',
        'picking_time_end' => 'time',
        'desired_delivery_date_start' => 'time',
        'desired_delivery_date_end' => 'time',
        'desired_delivery_time_start' => 'time',
        'desired_delivery_time_end' => 'time',
        'route_with_toll' => null,
        'route_without_toll' => null,
        'search_context' => null,
        'created_at' => 'date',
        'updated_at' => 'date',
        'complementary_informations' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'operator_id' => 'operatorId',
        'external_id' => 'externalId',
        'source' => 'source',
        'shipper_company_name' => 'shipperCompanyName',
        'shipper_logo' => 'shipperLogo',
        'shipper_contact_name' => 'shipperContactName',
        'shipper_contact_phone_number' => 'shipperContactPhoneNumber',
        'shipper_contact_cellphone_number' => 'shipperContactCellphoneNumber',
        'shipper_contact_fax_number' => 'shipperContactFaxNumber',
        'shipper_contact_email' => 'shipperContactEmail',
        'shipper_price' => 'shipperPrice',
        'seized_price' => 'seizedPrice',
        'product_group' => 'productGroup',
        'good_type' => 'goodType',
        'truck_types' => 'truckTypes',
        'loading_point_contact_first_name' => 'loadingPointContactFirstName',
        'loading_point_contact_last_name' => 'loadingPointContactLastName',
        'loading_point_contact_company_name' => 'loadingPointContactCompanyName',
        'loading_point_contact_phone_number' => 'loadingPointContactPhoneNumber',
        'loading_point_contact_cellphone_number' => 'loadingPointContactCellphoneNumber',
        'loading_point_contact_fax_number' => 'loadingPointContactFaxNumber',
        'loading_point_contact_email' => 'loadingPointContactEmail',
        'loading_point_address_number' => 'loadingPointAddressNumber',
        'loading_point_address_street_name' => 'loadingPointAddressStreetName',
        'loading_point_address_complement' => 'loadingPointAddressComplement',
        'loading_point_address_postcode' => 'loadingPointAddressPostcode',
        'loading_point_address_zone' => 'loadingPointAddressZone',
        'loading_point_address_city' => 'loadingPointAddressCity',
        'loading_point_address_country' => 'loadingPointAddressCountry',
        'loading_point_address_country_code' => 'loadingPointAddressCountryCode',
        'loading_point_address_gps_coordinates' => 'loadingPointAddressGpsCoordinates',
        'loading_point_address_complementary_informations' => 'loadingPointAddressComplementaryInformations',
        'unloading_point_contact_first_name' => 'unloadingPointContactFirstName',
        'unloading_point_contact_last_name' => 'unloadingPointContactLastName',
        'unloading_point_contact_company_name' => 'unloadingPointContactCompanyName',
        'unloading_point_contact_phone_number' => 'unloadingPointContactPhoneNumber',
        'unloading_point_contact_cellphone_number' => 'unloadingPointContactCellphoneNumber',
        'unloading_point_contact_fax_number' => 'unloadingPointContactFaxNumber',
        'unloading_point_contact_email' => 'unloadingPointContactEmail',
        'unloading_point_address_number' => 'unloadingPointAddressNumber',
        'unloading_point_address_street_name' => 'unloadingPointAddressStreetName',
        'unloading_point_address_complement' => 'unloadingPointAddressComplement',
        'unloading_point_address_postcode' => 'unloadingPointAddressPostcode',
        'unloading_point_address_zone' => 'unloadingPointAddressZone',
        'unloading_point_address_city' => 'unloadingPointAddressCity',
        'unloading_point_address_country' => 'unloadingPointAddressCountry',
        'unloading_point_address_country_code' => 'unloadingPointAddressCountryCode',
        'unloading_point_address_gps_coordinates' => 'unloadingPointAddressGpsCoordinates',
        'unloading_point_address_complementary_informations' => 'unloadingPointAddressComplementaryInformations',
        'picking_date_start' => 'pickingDateStart',
        'picking_date_end' => 'pickingDateEnd',
        'picking_time_start' => 'pickingTimeStart',
        'picking_time_end' => 'pickingTimeEnd',
        'desired_delivery_date_start' => 'desiredDeliveryDateStart',
        'desired_delivery_date_end' => 'desiredDeliveryDateEnd',
        'desired_delivery_time_start' => 'desiredDeliveryTimeStart',
        'desired_delivery_time_end' => 'desiredDeliveryTimeEnd',
        'route_with_toll' => 'routeWithToll',
        'route_without_toll' => 'routeWithoutToll',
        'search_context' => 'searchContext',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'complementary_informations' => 'complementaryInformations'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'operator_id' => 'setOperatorId',
        'external_id' => 'setExternalId',
        'source' => 'setSource',
        'shipper_company_name' => 'setShipperCompanyName',
        'shipper_logo' => 'setShipperLogo',
        'shipper_contact_name' => 'setShipperContactName',
        'shipper_contact_phone_number' => 'setShipperContactPhoneNumber',
        'shipper_contact_cellphone_number' => 'setShipperContactCellphoneNumber',
        'shipper_contact_fax_number' => 'setShipperContactFaxNumber',
        'shipper_contact_email' => 'setShipperContactEmail',
        'shipper_price' => 'setShipperPrice',
        'seized_price' => 'setSeizedPrice',
        'product_group' => 'setProductGroup',
        'good_type' => 'setGoodType',
        'truck_types' => 'setTruckTypes',
        'loading_point_contact_first_name' => 'setLoadingPointContactFirstName',
        'loading_point_contact_last_name' => 'setLoadingPointContactLastName',
        'loading_point_contact_company_name' => 'setLoadingPointContactCompanyName',
        'loading_point_contact_phone_number' => 'setLoadingPointContactPhoneNumber',
        'loading_point_contact_cellphone_number' => 'setLoadingPointContactCellphoneNumber',
        'loading_point_contact_fax_number' => 'setLoadingPointContactFaxNumber',
        'loading_point_contact_email' => 'setLoadingPointContactEmail',
        'loading_point_address_number' => 'setLoadingPointAddressNumber',
        'loading_point_address_street_name' => 'setLoadingPointAddressStreetName',
        'loading_point_address_complement' => 'setLoadingPointAddressComplement',
        'loading_point_address_postcode' => 'setLoadingPointAddressPostcode',
        'loading_point_address_zone' => 'setLoadingPointAddressZone',
        'loading_point_address_city' => 'setLoadingPointAddressCity',
        'loading_point_address_country' => 'setLoadingPointAddressCountry',
        'loading_point_address_country_code' => 'setLoadingPointAddressCountryCode',
        'loading_point_address_gps_coordinates' => 'setLoadingPointAddressGpsCoordinates',
        'loading_point_address_complementary_informations' => 'setLoadingPointAddressComplementaryInformations',
        'unloading_point_contact_first_name' => 'setUnloadingPointContactFirstName',
        'unloading_point_contact_last_name' => 'setUnloadingPointContactLastName',
        'unloading_point_contact_company_name' => 'setUnloadingPointContactCompanyName',
        'unloading_point_contact_phone_number' => 'setUnloadingPointContactPhoneNumber',
        'unloading_point_contact_cellphone_number' => 'setUnloadingPointContactCellphoneNumber',
        'unloading_point_contact_fax_number' => 'setUnloadingPointContactFaxNumber',
        'unloading_point_contact_email' => 'setUnloadingPointContactEmail',
        'unloading_point_address_number' => 'setUnloadingPointAddressNumber',
        'unloading_point_address_street_name' => 'setUnloadingPointAddressStreetName',
        'unloading_point_address_complement' => 'setUnloadingPointAddressComplement',
        'unloading_point_address_postcode' => 'setUnloadingPointAddressPostcode',
        'unloading_point_address_zone' => 'setUnloadingPointAddressZone',
        'unloading_point_address_city' => 'setUnloadingPointAddressCity',
        'unloading_point_address_country' => 'setUnloadingPointAddressCountry',
        'unloading_point_address_country_code' => 'setUnloadingPointAddressCountryCode',
        'unloading_point_address_gps_coordinates' => 'setUnloadingPointAddressGpsCoordinates',
        'unloading_point_address_complementary_informations' => 'setUnloadingPointAddressComplementaryInformations',
        'picking_date_start' => 'setPickingDateStart',
        'picking_date_end' => 'setPickingDateEnd',
        'picking_time_start' => 'setPickingTimeStart',
        'picking_time_end' => 'setPickingTimeEnd',
        'desired_delivery_date_start' => 'setDesiredDeliveryDateStart',
        'desired_delivery_date_end' => 'setDesiredDeliveryDateEnd',
        'desired_delivery_time_start' => 'setDesiredDeliveryTimeStart',
        'desired_delivery_time_end' => 'setDesiredDeliveryTimeEnd',
        'route_with_toll' => 'setRouteWithToll',
        'route_without_toll' => 'setRouteWithoutToll',
        'search_context' => 'setSearchContext',
        'created_at' => 'setCreatedAt',
        'updated_at' => 'setUpdatedAt',
        'complementary_informations' => 'setComplementaryInformations'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'operator_id' => 'getOperatorId',
        'external_id' => 'getExternalId',
        'source' => 'getSource',
        'shipper_company_name' => 'getShipperCompanyName',
        'shipper_logo' => 'getShipperLogo',
        'shipper_contact_name' => 'getShipperContactName',
        'shipper_contact_phone_number' => 'getShipperContactPhoneNumber',
        'shipper_contact_cellphone_number' => 'getShipperContactCellphoneNumber',
        'shipper_contact_fax_number' => 'getShipperContactFaxNumber',
        'shipper_contact_email' => 'getShipperContactEmail',
        'shipper_price' => 'getShipperPrice',
        'seized_price' => 'getSeizedPrice',
        'product_group' => 'getProductGroup',
        'good_type' => 'getGoodType',
        'truck_types' => 'getTruckTypes',
        'loading_point_contact_first_name' => 'getLoadingPointContactFirstName',
        'loading_point_contact_last_name' => 'getLoadingPointContactLastName',
        'loading_point_contact_company_name' => 'getLoadingPointContactCompanyName',
        'loading_point_contact_phone_number' => 'getLoadingPointContactPhoneNumber',
        'loading_point_contact_cellphone_number' => 'getLoadingPointContactCellphoneNumber',
        'loading_point_contact_fax_number' => 'getLoadingPointContactFaxNumber',
        'loading_point_contact_email' => 'getLoadingPointContactEmail',
        'loading_point_address_number' => 'getLoadingPointAddressNumber',
        'loading_point_address_street_name' => 'getLoadingPointAddressStreetName',
        'loading_point_address_complement' => 'getLoadingPointAddressComplement',
        'loading_point_address_postcode' => 'getLoadingPointAddressPostcode',
        'loading_point_address_zone' => 'getLoadingPointAddressZone',
        'loading_point_address_city' => 'getLoadingPointAddressCity',
        'loading_point_address_country' => 'getLoadingPointAddressCountry',
        'loading_point_address_country_code' => 'getLoadingPointAddressCountryCode',
        'loading_point_address_gps_coordinates' => 'getLoadingPointAddressGpsCoordinates',
        'loading_point_address_complementary_informations' => 'getLoadingPointAddressComplementaryInformations',
        'unloading_point_contact_first_name' => 'getUnloadingPointContactFirstName',
        'unloading_point_contact_last_name' => 'getUnloadingPointContactLastName',
        'unloading_point_contact_company_name' => 'getUnloadingPointContactCompanyName',
        'unloading_point_contact_phone_number' => 'getUnloadingPointContactPhoneNumber',
        'unloading_point_contact_cellphone_number' => 'getUnloadingPointContactCellphoneNumber',
        'unloading_point_contact_fax_number' => 'getUnloadingPointContactFaxNumber',
        'unloading_point_contact_email' => 'getUnloadingPointContactEmail',
        'unloading_point_address_number' => 'getUnloadingPointAddressNumber',
        'unloading_point_address_street_name' => 'getUnloadingPointAddressStreetName',
        'unloading_point_address_complement' => 'getUnloadingPointAddressComplement',
        'unloading_point_address_postcode' => 'getUnloadingPointAddressPostcode',
        'unloading_point_address_zone' => 'getUnloadingPointAddressZone',
        'unloading_point_address_city' => 'getUnloadingPointAddressCity',
        'unloading_point_address_country' => 'getUnloadingPointAddressCountry',
        'unloading_point_address_country_code' => 'getUnloadingPointAddressCountryCode',
        'unloading_point_address_gps_coordinates' => 'getUnloadingPointAddressGpsCoordinates',
        'unloading_point_address_complementary_informations' => 'getUnloadingPointAddressComplementaryInformations',
        'picking_date_start' => 'getPickingDateStart',
        'picking_date_end' => 'getPickingDateEnd',
        'picking_time_start' => 'getPickingTimeStart',
        'picking_time_end' => 'getPickingTimeEnd',
        'desired_delivery_date_start' => 'getDesiredDeliveryDateStart',
        'desired_delivery_date_end' => 'getDesiredDeliveryDateEnd',
        'desired_delivery_time_start' => 'getDesiredDeliveryTimeStart',
        'desired_delivery_time_end' => 'getDesiredDeliveryTimeEnd',
        'route_with_toll' => 'getRouteWithToll',
        'route_without_toll' => 'getRouteWithoutToll',
        'search_context' => 'getSearchContext',
        'created_at' => 'getCreatedAt',
        'updated_at' => 'getUpdatedAt',
        'complementary_informations' => 'getComplementaryInformations'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const GOOD_TYPE_ALL = 'all';
    const GOOD_TYPE_BULKY_TRANSPORT = 'bulky_transport';
    const GOOD_TYPE_CONTAINERS = 'containers';
    const GOOD_TYPE_EXCEPTIONAL_TRANSPORT = 'exceptional_transport';
    const GOOD_TYPE_GENERAL_MERCHANDISE = 'general_merchandise';
    const GOOD_TYPE_GOVERNED_TEMPERATURE = 'governed_temperature';
    const GOOD_TYPE_MESSAGING = 'messaging';
    const GOOD_TYPE_MOVING = 'moving';
    const GOOD_TYPE_SKIPS = 'skips';
    const GOOD_TYPE_TANKERS = 'tankers';
    const TRUCK_TYPES_ALL = 'all';
    const TRUCK_TYPES__20_FEET = '20_feet';
    const TRUCK_TYPES__40_FEET = '40_feet';
    const TRUCK_TYPES_FLAT_BED = 'flat_bed';
    const TRUCK_TYPES_GENERAL_OTHER = 'general_other';
    const TRUCK_TYPES_TAUT = 'taut';
    const TRUCK_TYPES_VAN = 'van';
    const TRUCK_TYPES_CHARGES = 'charges';
    const TRUCK_TYPES_FROZEN_FOOD = 'frozen_food';
    const TRUCK_TYPES_MULTI_TEMPERATURE = 'multi_temperature';
    const TRUCK_TYPES_NON_REFRIGERATED = 'non_refrigerated';
    const TRUCK_TYPES_GOVERNED_TEMPERATURE_OTHER = 'governed_temperature_other';
    const TRUCK_TYPES_CATEGORY_1 = 'category_1';
    const TRUCK_TYPES_CATEGORY_2 = 'category_2';
    const TRUCK_TYPES_CATEGORY_3 = 'category_3';
    const TRUCK_TYPES_CEREAL_LORRY = 'cereal_lorry';
    const TRUCK_TYPES_MOVING_BOTTOM = 'moving_bottom';
    const TRUCK_TYPES_SKIPS_OTHER = 'skips_other';
    const TRUCK_TYPES_REINFORCED = 'reinforced';
    const TRUCK_TYPES_LIQUID = 'liquid';
    const TRUCK_TYPES_TANKERS_OTHER = 'tankers_other';
    const TRUCK_TYPES_SILO = 'silo';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_AD = 'AD';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_AL = 'AL';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_AT = 'AT';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_BA = 'BA';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_BE = 'BE';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_BG = 'BG';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_BY = 'BY';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_CH = 'CH';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_CY = 'CY';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_CZ = 'CZ';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_DE = 'DE';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_DK = 'DK';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_EE = 'EE';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_ES = 'ES';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_FI = 'FI';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_FO = 'FO';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_FR = 'FR';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_GB = 'GB';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_GI = 'GI';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_GR = 'GR';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_HR = 'HR';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_HU = 'HU';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_IE = 'IE';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_IM = 'IM';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_IS = 'IS';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_IT = 'IT';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_LI = 'LI';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_LT = 'LT';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_LU = 'LU';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_LV = 'LV';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_MC = 'MC';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_MD = 'MD';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_ME = 'ME';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_MK = 'MK';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_MT = 'MT';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_NL = 'NL';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_NO = 'NO';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_PL = 'PL';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_PT = 'PT';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_RO = 'RO';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_RS = 'RS';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_RU = 'RU';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_SE = 'SE';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_SI = 'SI';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_SK = 'SK';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_SM = 'SM';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_UA = 'UA';
    const LOADING_POINT_ADDRESS_COUNTRY_CODE_VA = 'VA';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_AD = 'AD';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_AL = 'AL';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_AT = 'AT';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_BA = 'BA';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_BE = 'BE';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_BG = 'BG';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_BY = 'BY';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_CH = 'CH';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_CY = 'CY';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_CZ = 'CZ';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_DE = 'DE';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_DK = 'DK';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_EE = 'EE';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_ES = 'ES';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_FI = 'FI';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_FO = 'FO';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_FR = 'FR';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_GB = 'GB';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_GI = 'GI';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_GR = 'GR';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_HR = 'HR';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_HU = 'HU';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_IE = 'IE';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_IM = 'IM';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_IS = 'IS';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_IT = 'IT';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_LI = 'LI';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_LT = 'LT';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_LU = 'LU';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_LV = 'LV';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_MC = 'MC';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_MD = 'MD';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_ME = 'ME';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_MK = 'MK';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_MT = 'MT';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_NL = 'NL';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_NO = 'NO';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_PL = 'PL';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_PT = 'PT';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_RO = 'RO';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_RS = 'RS';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_RU = 'RU';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_SE = 'SE';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_SI = 'SI';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_SK = 'SK';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_SM = 'SM';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_UA = 'UA';
    const UNLOADING_POINT_ADDRESS_COUNTRY_CODE_VA = 'VA';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getGoodTypeAllowableValues()
    {
        return [
            self::GOOD_TYPE_ALL,
            self::GOOD_TYPE_BULKY_TRANSPORT,
            self::GOOD_TYPE_CONTAINERS,
            self::GOOD_TYPE_EXCEPTIONAL_TRANSPORT,
            self::GOOD_TYPE_GENERAL_MERCHANDISE,
            self::GOOD_TYPE_GOVERNED_TEMPERATURE,
            self::GOOD_TYPE_MESSAGING,
            self::GOOD_TYPE_MOVING,
            self::GOOD_TYPE_SKIPS,
            self::GOOD_TYPE_TANKERS,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getTruckTypesAllowableValues()
    {
        return [
            self::TRUCK_TYPES_ALL,
            self::TRUCK_TYPES__20_FEET,
            self::TRUCK_TYPES__40_FEET,
            self::TRUCK_TYPES_FLAT_BED,
            self::TRUCK_TYPES_GENERAL_OTHER,
            self::TRUCK_TYPES_TAUT,
            self::TRUCK_TYPES_VAN,
            self::TRUCK_TYPES_CHARGES,
            self::TRUCK_TYPES_FROZEN_FOOD,
            self::TRUCK_TYPES_MULTI_TEMPERATURE,
            self::TRUCK_TYPES_NON_REFRIGERATED,
            self::TRUCK_TYPES_GOVERNED_TEMPERATURE_OTHER,
            self::TRUCK_TYPES_CATEGORY_1,
            self::TRUCK_TYPES_CATEGORY_2,
            self::TRUCK_TYPES_CATEGORY_3,
            self::TRUCK_TYPES_CEREAL_LORRY,
            self::TRUCK_TYPES_MOVING_BOTTOM,
            self::TRUCK_TYPES_SKIPS_OTHER,
            self::TRUCK_TYPES_REINFORCED,
            self::TRUCK_TYPES_LIQUID,
            self::TRUCK_TYPES_TANKERS_OTHER,
            self::TRUCK_TYPES_SILO,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getLoadingPointAddressCountryCodeAllowableValues()
    {
        return [
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_AD,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_AL,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_AT,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_BA,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_BE,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_BG,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_BY,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_CH,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_CY,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_CZ,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_DE,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_DK,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_EE,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_ES,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_FI,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_FO,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_FR,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_GB,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_GI,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_GR,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_HR,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_HU,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_IE,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_IM,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_IS,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_IT,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_LI,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_LT,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_LU,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_LV,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_MC,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_MD,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_ME,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_MK,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_MT,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_NL,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_NO,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_PL,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_PT,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_RO,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_RS,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_RU,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_SE,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_SI,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_SK,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_SM,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_UA,
            self::LOADING_POINT_ADDRESS_COUNTRY_CODE_VA,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getUnloadingPointAddressCountryCodeAllowableValues()
    {
        return [
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_AD,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_AL,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_AT,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_BA,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_BE,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_BG,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_BY,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_CH,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_CY,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_CZ,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_DE,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_DK,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_EE,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_ES,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_FI,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_FO,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_FR,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_GB,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_GI,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_GR,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_HR,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_HU,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_IE,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_IM,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_IS,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_IT,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_LI,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_LT,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_LU,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_LV,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_MC,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_MD,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_ME,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_MK,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_MT,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_NL,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_NO,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_PL,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_PT,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_RO,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_RS,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_RU,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_SE,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_SI,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_SK,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_SM,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_UA,
            self::UNLOADING_POINT_ADDRESS_COUNTRY_CODE_VA,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['operator_id'] = isset($data['operator_id']) ? $data['operator_id'] : null;
        $this->container['external_id'] = isset($data['external_id']) ? $data['external_id'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['shipper_company_name'] = isset($data['shipper_company_name']) ? $data['shipper_company_name'] : null;
        $this->container['shipper_logo'] = isset($data['shipper_logo']) ? $data['shipper_logo'] : null;
        $this->container['shipper_contact_name'] = isset($data['shipper_contact_name']) ? $data['shipper_contact_name'] : null;
        $this->container['shipper_contact_phone_number'] = isset($data['shipper_contact_phone_number']) ? $data['shipper_contact_phone_number'] : null;
        $this->container['shipper_contact_cellphone_number'] = isset($data['shipper_contact_cellphone_number']) ? $data['shipper_contact_cellphone_number'] : null;
        $this->container['shipper_contact_fax_number'] = isset($data['shipper_contact_fax_number']) ? $data['shipper_contact_fax_number'] : null;
        $this->container['shipper_contact_email'] = isset($data['shipper_contact_email']) ? $data['shipper_contact_email'] : null;
        $this->container['shipper_price'] = isset($data['shipper_price']) ? $data['shipper_price'] : null;
        $this->container['seized_price'] = isset($data['seized_price']) ? $data['seized_price'] : null;
        $this->container['product_group'] = isset($data['product_group']) ? $data['product_group'] : null;
        $this->container['good_type'] = isset($data['good_type']) ? $data['good_type'] : null;
        $this->container['truck_types'] = isset($data['truck_types']) ? $data['truck_types'] : null;
        $this->container['loading_point_contact_first_name'] = isset($data['loading_point_contact_first_name']) ? $data['loading_point_contact_first_name'] : null;
        $this->container['loading_point_contact_last_name'] = isset($data['loading_point_contact_last_name']) ? $data['loading_point_contact_last_name'] : null;
        $this->container['loading_point_contact_company_name'] = isset($data['loading_point_contact_company_name']) ? $data['loading_point_contact_company_name'] : null;
        $this->container['loading_point_contact_phone_number'] = isset($data['loading_point_contact_phone_number']) ? $data['loading_point_contact_phone_number'] : null;
        $this->container['loading_point_contact_cellphone_number'] = isset($data['loading_point_contact_cellphone_number']) ? $data['loading_point_contact_cellphone_number'] : null;
        $this->container['loading_point_contact_fax_number'] = isset($data['loading_point_contact_fax_number']) ? $data['loading_point_contact_fax_number'] : null;
        $this->container['loading_point_contact_email'] = isset($data['loading_point_contact_email']) ? $data['loading_point_contact_email'] : null;
        $this->container['loading_point_address_number'] = isset($data['loading_point_address_number']) ? $data['loading_point_address_number'] : null;
        $this->container['loading_point_address_street_name'] = isset($data['loading_point_address_street_name']) ? $data['loading_point_address_street_name'] : null;
        $this->container['loading_point_address_complement'] = isset($data['loading_point_address_complement']) ? $data['loading_point_address_complement'] : null;
        $this->container['loading_point_address_postcode'] = isset($data['loading_point_address_postcode']) ? $data['loading_point_address_postcode'] : null;
        $this->container['loading_point_address_zone'] = isset($data['loading_point_address_zone']) ? $data['loading_point_address_zone'] : null;
        $this->container['loading_point_address_city'] = isset($data['loading_point_address_city']) ? $data['loading_point_address_city'] : null;
        $this->container['loading_point_address_country'] = isset($data['loading_point_address_country']) ? $data['loading_point_address_country'] : null;
        $this->container['loading_point_address_country_code'] = isset($data['loading_point_address_country_code']) ? $data['loading_point_address_country_code'] : null;
        $this->container['loading_point_address_gps_coordinates'] = isset($data['loading_point_address_gps_coordinates']) ? $data['loading_point_address_gps_coordinates'] : null;
        $this->container['loading_point_address_complementary_informations'] = isset($data['loading_point_address_complementary_informations']) ? $data['loading_point_address_complementary_informations'] : null;
        $this->container['unloading_point_contact_first_name'] = isset($data['unloading_point_contact_first_name']) ? $data['unloading_point_contact_first_name'] : null;
        $this->container['unloading_point_contact_last_name'] = isset($data['unloading_point_contact_last_name']) ? $data['unloading_point_contact_last_name'] : null;
        $this->container['unloading_point_contact_company_name'] = isset($data['unloading_point_contact_company_name']) ? $data['unloading_point_contact_company_name'] : null;
        $this->container['unloading_point_contact_phone_number'] = isset($data['unloading_point_contact_phone_number']) ? $data['unloading_point_contact_phone_number'] : null;
        $this->container['unloading_point_contact_cellphone_number'] = isset($data['unloading_point_contact_cellphone_number']) ? $data['unloading_point_contact_cellphone_number'] : null;
        $this->container['unloading_point_contact_fax_number'] = isset($data['unloading_point_contact_fax_number']) ? $data['unloading_point_contact_fax_number'] : null;
        $this->container['unloading_point_contact_email'] = isset($data['unloading_point_contact_email']) ? $data['unloading_point_contact_email'] : null;
        $this->container['unloading_point_address_number'] = isset($data['unloading_point_address_number']) ? $data['unloading_point_address_number'] : null;
        $this->container['unloading_point_address_street_name'] = isset($data['unloading_point_address_street_name']) ? $data['unloading_point_address_street_name'] : null;
        $this->container['unloading_point_address_complement'] = isset($data['unloading_point_address_complement']) ? $data['unloading_point_address_complement'] : null;
        $this->container['unloading_point_address_postcode'] = isset($data['unloading_point_address_postcode']) ? $data['unloading_point_address_postcode'] : null;
        $this->container['unloading_point_address_zone'] = isset($data['unloading_point_address_zone']) ? $data['unloading_point_address_zone'] : null;
        $this->container['unloading_point_address_city'] = isset($data['unloading_point_address_city']) ? $data['unloading_point_address_city'] : null;
        $this->container['unloading_point_address_country'] = isset($data['unloading_point_address_country']) ? $data['unloading_point_address_country'] : null;
        $this->container['unloading_point_address_country_code'] = isset($data['unloading_point_address_country_code']) ? $data['unloading_point_address_country_code'] : null;
        $this->container['unloading_point_address_gps_coordinates'] = isset($data['unloading_point_address_gps_coordinates']) ? $data['unloading_point_address_gps_coordinates'] : null;
        $this->container['unloading_point_address_complementary_informations'] = isset($data['unloading_point_address_complementary_informations']) ? $data['unloading_point_address_complementary_informations'] : null;
        $this->container['picking_date_start'] = isset($data['picking_date_start']) ? $data['picking_date_start'] : null;
        $this->container['picking_date_end'] = isset($data['picking_date_end']) ? $data['picking_date_end'] : null;
        $this->container['picking_time_start'] = isset($data['picking_time_start']) ? $data['picking_time_start'] : null;
        $this->container['picking_time_end'] = isset($data['picking_time_end']) ? $data['picking_time_end'] : null;
        $this->container['desired_delivery_date_start'] = isset($data['desired_delivery_date_start']) ? $data['desired_delivery_date_start'] : null;
        $this->container['desired_delivery_date_end'] = isset($data['desired_delivery_date_end']) ? $data['desired_delivery_date_end'] : null;
        $this->container['desired_delivery_time_start'] = isset($data['desired_delivery_time_start']) ? $data['desired_delivery_time_start'] : null;
        $this->container['desired_delivery_time_end'] = isset($data['desired_delivery_time_end']) ? $data['desired_delivery_time_end'] : null;
        $this->container['route_with_toll'] = isset($data['route_with_toll']) ? $data['route_with_toll'] : null;
        $this->container['route_without_toll'] = isset($data['route_without_toll']) ? $data['route_without_toll'] : null;
        $this->container['search_context'] = isset($data['search_context']) ? $data['search_context'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['complementary_informations'] = isset($data['complementary_informations']) ? $data['complementary_informations'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getGoodTypeAllowableValues();
        if (!is_null($this->container['good_type']) && !in_array($this->container['good_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'good_type', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getLoadingPointAddressCountryCodeAllowableValues();
        if (!is_null($this->container['loading_point_address_country_code']) && !in_array($this->container['loading_point_address_country_code'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'loading_point_address_country_code', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getUnloadingPointAddressCountryCodeAllowableValues();
        if (!is_null($this->container['unloading_point_address_country_code']) && !in_array($this->container['unloading_point_address_country_code'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'unloading_point_address_country_code', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets operator_id
     *
     * @return int
     */
    public function getOperatorId()
    {
        return $this->container['operator_id'];
    }

    /**
     * Sets operator_id
     *
     * @param int $operator_id operator_id
     *
     * @return $this
     */
    public function setOperatorId($operator_id)
    {
        $this->container['operator_id'] = $operator_id;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string $external_id external_id
     *
     * @return $this
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string $source source
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets shipper_company_name
     *
     * @return string
     */
    public function getShipperCompanyName()
    {
        return $this->container['shipper_company_name'];
    }

    /**
     * Sets shipper_company_name
     *
     * @param string $shipper_company_name shipper_company_name
     *
     * @return $this
     */
    public function setShipperCompanyName($shipper_company_name)
    {
        $this->container['shipper_company_name'] = $shipper_company_name;

        return $this;
    }

    /**
     * Gets shipper_logo
     *
     * @return string
     */
    public function getShipperLogo()
    {
        return $this->container['shipper_logo'];
    }

    /**
     * Sets shipper_logo
     *
     * @param string $shipper_logo shipper_logo
     *
     * @return $this
     */
    public function setShipperLogo($shipper_logo)
    {
        $this->container['shipper_logo'] = $shipper_logo;

        return $this;
    }

    /**
     * Gets shipper_contact_name
     *
     * @return string
     */
    public function getShipperContactName()
    {
        return $this->container['shipper_contact_name'];
    }

    /**
     * Sets shipper_contact_name
     *
     * @param string $shipper_contact_name shipper_contact_name
     *
     * @return $this
     */
    public function setShipperContactName($shipper_contact_name)
    {
        $this->container['shipper_contact_name'] = $shipper_contact_name;

        return $this;
    }

    /**
     * Gets shipper_contact_phone_number
     *
     * @return string
     */
    public function getShipperContactPhoneNumber()
    {
        return $this->container['shipper_contact_phone_number'];
    }

    /**
     * Sets shipper_contact_phone_number
     *
     * @param string $shipper_contact_phone_number shipper_contact_phone_number
     *
     * @return $this
     */
    public function setShipperContactPhoneNumber($shipper_contact_phone_number)
    {
        $this->container['shipper_contact_phone_number'] = $shipper_contact_phone_number;

        return $this;
    }

    /**
     * Gets shipper_contact_cellphone_number
     *
     * @return string
     */
    public function getShipperContactCellphoneNumber()
    {
        return $this->container['shipper_contact_cellphone_number'];
    }

    /**
     * Sets shipper_contact_cellphone_number
     *
     * @param string $shipper_contact_cellphone_number shipper_contact_cellphone_number
     *
     * @return $this
     */
    public function setShipperContactCellphoneNumber($shipper_contact_cellphone_number)
    {
        $this->container['shipper_contact_cellphone_number'] = $shipper_contact_cellphone_number;

        return $this;
    }

    /**
     * Gets shipper_contact_fax_number
     *
     * @return string
     */
    public function getShipperContactFaxNumber()
    {
        return $this->container['shipper_contact_fax_number'];
    }

    /**
     * Sets shipper_contact_fax_number
     *
     * @param string $shipper_contact_fax_number shipper_contact_fax_number
     *
     * @return $this
     */
    public function setShipperContactFaxNumber($shipper_contact_fax_number)
    {
        $this->container['shipper_contact_fax_number'] = $shipper_contact_fax_number;

        return $this;
    }

    /**
     * Gets shipper_contact_email
     *
     * @return string
     */
    public function getShipperContactEmail()
    {
        return $this->container['shipper_contact_email'];
    }

    /**
     * Sets shipper_contact_email
     *
     * @param string $shipper_contact_email shipper_contact_email
     *
     * @return $this
     */
    public function setShipperContactEmail($shipper_contact_email)
    {
        $this->container['shipper_contact_email'] = $shipper_contact_email;

        return $this;
    }

    /**
     * Gets shipper_price
     *
     * @return float
     */
    public function getShipperPrice()
    {
        return $this->container['shipper_price'];
    }

    /**
     * Sets shipper_price
     *
     * @param float $shipper_price shipper_price
     *
     * @return $this
     */
    public function setShipperPrice($shipper_price)
    {
        $this->container['shipper_price'] = $shipper_price;

        return $this;
    }

    /**
     * Gets seized_price
     *
     * @return float
     */
    public function getSeizedPrice()
    {
        return $this->container['seized_price'];
    }

    /**
     * Sets seized_price
     *
     * @param float $seized_price seized_price
     *
     * @return $this
     */
    public function setSeizedPrice($seized_price)
    {
        $this->container['seized_price'] = $seized_price;

        return $this;
    }

    /**
     * Gets product_group
     *
     * @return \Swagger\Client\Model\ProductGroup
     */
    public function getProductGroup()
    {
        return $this->container['product_group'];
    }

    /**
     * Sets product_group
     *
     * @param \Swagger\Client\Model\ProductGroup $product_group product_group
     *
     * @return $this
     */
    public function setProductGroup($product_group)
    {
        $this->container['product_group'] = $product_group;

        return $this;
    }

    /**
     * Gets good_type
     *
     * @return string
     */
    public function getGoodType()
    {
        return $this->container['good_type'];
    }

    /**
     * Sets good_type
     *
     * @param string $good_type good_type
     *
     * @return $this
     */
    public function setGoodType($good_type)
    {
        $allowedValues = $this->getGoodTypeAllowableValues();
        if (!is_null($good_type) && !in_array($good_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'good_type', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['good_type'] = $good_type;

        return $this;
    }

    /**
     * Gets truck_types
     *
     * @return string[]
     */
    public function getTruckTypes()
    {
        return $this->container['truck_types'];
    }

    /**
     * Sets truck_types
     *
     * @param string[] $truck_types truck_types
     *
     * @return $this
     */
    public function setTruckTypes($truck_types)
    {
        $allowedValues = $this->getTruckTypesAllowableValues();
        if (!is_null($truck_types) && array_diff($truck_types, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'truck_types', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['truck_types'] = $truck_types;

        return $this;
    }

    /**
     * Gets loading_point_contact_first_name
     *
     * @return string
     */
    public function getLoadingPointContactFirstName()
    {
        return $this->container['loading_point_contact_first_name'];
    }

    /**
     * Sets loading_point_contact_first_name
     *
     * @param string $loading_point_contact_first_name loading_point_contact_first_name
     *
     * @return $this
     */
    public function setLoadingPointContactFirstName($loading_point_contact_first_name)
    {
        $this->container['loading_point_contact_first_name'] = $loading_point_contact_first_name;

        return $this;
    }

    /**
     * Gets loading_point_contact_last_name
     *
     * @return string
     */
    public function getLoadingPointContactLastName()
    {
        return $this->container['loading_point_contact_last_name'];
    }

    /**
     * Sets loading_point_contact_last_name
     *
     * @param string $loading_point_contact_last_name loading_point_contact_last_name
     *
     * @return $this
     */
    public function setLoadingPointContactLastName($loading_point_contact_last_name)
    {
        $this->container['loading_point_contact_last_name'] = $loading_point_contact_last_name;

        return $this;
    }

    /**
     * Gets loading_point_contact_company_name
     *
     * @return string
     */
    public function getLoadingPointContactCompanyName()
    {
        return $this->container['loading_point_contact_company_name'];
    }

    /**
     * Sets loading_point_contact_company_name
     *
     * @param string $loading_point_contact_company_name loading_point_contact_company_name
     *
     * @return $this
     */
    public function setLoadingPointContactCompanyName($loading_point_contact_company_name)
    {
        $this->container['loading_point_contact_company_name'] = $loading_point_contact_company_name;

        return $this;
    }

    /**
     * Gets loading_point_contact_phone_number
     *
     * @return string
     */
    public function getLoadingPointContactPhoneNumber()
    {
        return $this->container['loading_point_contact_phone_number'];
    }

    /**
     * Sets loading_point_contact_phone_number
     *
     * @param string $loading_point_contact_phone_number loading_point_contact_phone_number
     *
     * @return $this
     */
    public function setLoadingPointContactPhoneNumber($loading_point_contact_phone_number)
    {
        $this->container['loading_point_contact_phone_number'] = $loading_point_contact_phone_number;

        return $this;
    }

    /**
     * Gets loading_point_contact_cellphone_number
     *
     * @return string
     */
    public function getLoadingPointContactCellphoneNumber()
    {
        return $this->container['loading_point_contact_cellphone_number'];
    }

    /**
     * Sets loading_point_contact_cellphone_number
     *
     * @param string $loading_point_contact_cellphone_number loading_point_contact_cellphone_number
     *
     * @return $this
     */
    public function setLoadingPointContactCellphoneNumber($loading_point_contact_cellphone_number)
    {
        $this->container['loading_point_contact_cellphone_number'] = $loading_point_contact_cellphone_number;

        return $this;
    }

    /**
     * Gets loading_point_contact_fax_number
     *
     * @return string
     */
    public function getLoadingPointContactFaxNumber()
    {
        return $this->container['loading_point_contact_fax_number'];
    }

    /**
     * Sets loading_point_contact_fax_number
     *
     * @param string $loading_point_contact_fax_number loading_point_contact_fax_number
     *
     * @return $this
     */
    public function setLoadingPointContactFaxNumber($loading_point_contact_fax_number)
    {
        $this->container['loading_point_contact_fax_number'] = $loading_point_contact_fax_number;

        return $this;
    }

    /**
     * Gets loading_point_contact_email
     *
     * @return string
     */
    public function getLoadingPointContactEmail()
    {
        return $this->container['loading_point_contact_email'];
    }

    /**
     * Sets loading_point_contact_email
     *
     * @param string $loading_point_contact_email loading_point_contact_email
     *
     * @return $this
     */
    public function setLoadingPointContactEmail($loading_point_contact_email)
    {
        $this->container['loading_point_contact_email'] = $loading_point_contact_email;

        return $this;
    }

    /**
     * Gets loading_point_address_number
     *
     * @return string
     */
    public function getLoadingPointAddressNumber()
    {
        return $this->container['loading_point_address_number'];
    }

    /**
     * Sets loading_point_address_number
     *
     * @param string $loading_point_address_number loading_point_address_number
     *
     * @return $this
     */
    public function setLoadingPointAddressNumber($loading_point_address_number)
    {
        $this->container['loading_point_address_number'] = $loading_point_address_number;

        return $this;
    }

    /**
     * Gets loading_point_address_street_name
     *
     * @return string
     */
    public function getLoadingPointAddressStreetName()
    {
        return $this->container['loading_point_address_street_name'];
    }

    /**
     * Sets loading_point_address_street_name
     *
     * @param string $loading_point_address_street_name loading_point_address_street_name
     *
     * @return $this
     */
    public function setLoadingPointAddressStreetName($loading_point_address_street_name)
    {
        $this->container['loading_point_address_street_name'] = $loading_point_address_street_name;

        return $this;
    }

    /**
     * Gets loading_point_address_complement
     *
     * @return string
     */
    public function getLoadingPointAddressComplement()
    {
        return $this->container['loading_point_address_complement'];
    }

    /**
     * Sets loading_point_address_complement
     *
     * @param string $loading_point_address_complement loading_point_address_complement
     *
     * @return $this
     */
    public function setLoadingPointAddressComplement($loading_point_address_complement)
    {
        $this->container['loading_point_address_complement'] = $loading_point_address_complement;

        return $this;
    }

    /**
     * Gets loading_point_address_postcode
     *
     * @return string
     */
    public function getLoadingPointAddressPostcode()
    {
        return $this->container['loading_point_address_postcode'];
    }

    /**
     * Sets loading_point_address_postcode
     *
     * @param string $loading_point_address_postcode loading_point_address_postcode
     *
     * @return $this
     */
    public function setLoadingPointAddressPostcode($loading_point_address_postcode)
    {
        $this->container['loading_point_address_postcode'] = $loading_point_address_postcode;

        return $this;
    }

    /**
     * Gets loading_point_address_zone
     *
     * @return string
     */
    public function getLoadingPointAddressZone()
    {
        return $this->container['loading_point_address_zone'];
    }

    /**
     * Sets loading_point_address_zone
     *
     * @param string $loading_point_address_zone loading_point_address_zone
     *
     * @return $this
     */
    public function setLoadingPointAddressZone($loading_point_address_zone)
    {
        $this->container['loading_point_address_zone'] = $loading_point_address_zone;

        return $this;
    }

    /**
     * Gets loading_point_address_city
     *
     * @return string
     */
    public function getLoadingPointAddressCity()
    {
        return $this->container['loading_point_address_city'];
    }

    /**
     * Sets loading_point_address_city
     *
     * @param string $loading_point_address_city loading_point_address_city
     *
     * @return $this
     */
    public function setLoadingPointAddressCity($loading_point_address_city)
    {
        $this->container['loading_point_address_city'] = $loading_point_address_city;

        return $this;
    }

    /**
     * Gets loading_point_address_country
     *
     * @return string
     */
    public function getLoadingPointAddressCountry()
    {
        return $this->container['loading_point_address_country'];
    }

    /**
     * Sets loading_point_address_country
     *
     * @param string $loading_point_address_country loading_point_address_country
     *
     * @return $this
     */
    public function setLoadingPointAddressCountry($loading_point_address_country)
    {
        $this->container['loading_point_address_country'] = $loading_point_address_country;

        return $this;
    }

    /**
     * Gets loading_point_address_country_code
     *
     * @return string
     */
    public function getLoadingPointAddressCountryCode()
    {
        return $this->container['loading_point_address_country_code'];
    }

    /**
     * Sets loading_point_address_country_code
     *
     * @param string $loading_point_address_country_code loading_point_address_country_code
     *
     * @return $this
     */
    public function setLoadingPointAddressCountryCode($loading_point_address_country_code)
    {
        $allowedValues = $this->getLoadingPointAddressCountryCodeAllowableValues();
        if (!is_null($loading_point_address_country_code) && !in_array($loading_point_address_country_code, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'loading_point_address_country_code', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['loading_point_address_country_code'] = $loading_point_address_country_code;

        return $this;
    }

    /**
     * Gets loading_point_address_gps_coordinates
     *
     * @return \Swagger\Client\Model\GeoJsonPoint
     */
    public function getLoadingPointAddressGpsCoordinates()
    {
        return $this->container['loading_point_address_gps_coordinates'];
    }

    /**
     * Sets loading_point_address_gps_coordinates
     *
     * @param \Swagger\Client\Model\GeoJsonPoint $loading_point_address_gps_coordinates loading_point_address_gps_coordinates
     *
     * @return $this
     */
    public function setLoadingPointAddressGpsCoordinates($loading_point_address_gps_coordinates)
    {
        $this->container['loading_point_address_gps_coordinates'] = $loading_point_address_gps_coordinates;

        return $this;
    }

    /**
     * Gets loading_point_address_complementary_informations
     *
     * @return string
     */
    public function getLoadingPointAddressComplementaryInformations()
    {
        return $this->container['loading_point_address_complementary_informations'];
    }

    /**
     * Sets loading_point_address_complementary_informations
     *
     * @param string $loading_point_address_complementary_informations loading_point_address_complementary_informations
     *
     * @return $this
     */
    public function setLoadingPointAddressComplementaryInformations($loading_point_address_complementary_informations)
    {
        $this->container['loading_point_address_complementary_informations'] = $loading_point_address_complementary_informations;

        return $this;
    }

    /**
     * Gets unloading_point_contact_first_name
     *
     * @return string
     */
    public function getUnloadingPointContactFirstName()
    {
        return $this->container['unloading_point_contact_first_name'];
    }

    /**
     * Sets unloading_point_contact_first_name
     *
     * @param string $unloading_point_contact_first_name unloading_point_contact_first_name
     *
     * @return $this
     */
    public function setUnloadingPointContactFirstName($unloading_point_contact_first_name)
    {
        $this->container['unloading_point_contact_first_name'] = $unloading_point_contact_first_name;

        return $this;
    }

    /**
     * Gets unloading_point_contact_last_name
     *
     * @return string
     */
    public function getUnloadingPointContactLastName()
    {
        return $this->container['unloading_point_contact_last_name'];
    }

    /**
     * Sets unloading_point_contact_last_name
     *
     * @param string $unloading_point_contact_last_name unloading_point_contact_last_name
     *
     * @return $this
     */
    public function setUnloadingPointContactLastName($unloading_point_contact_last_name)
    {
        $this->container['unloading_point_contact_last_name'] = $unloading_point_contact_last_name;

        return $this;
    }

    /**
     * Gets unloading_point_contact_company_name
     *
     * @return string
     */
    public function getUnloadingPointContactCompanyName()
    {
        return $this->container['unloading_point_contact_company_name'];
    }

    /**
     * Sets unloading_point_contact_company_name
     *
     * @param string $unloading_point_contact_company_name unloading_point_contact_company_name
     *
     * @return $this
     */
    public function setUnloadingPointContactCompanyName($unloading_point_contact_company_name)
    {
        $this->container['unloading_point_contact_company_name'] = $unloading_point_contact_company_name;

        return $this;
    }

    /**
     * Gets unloading_point_contact_phone_number
     *
     * @return string
     */
    public function getUnloadingPointContactPhoneNumber()
    {
        return $this->container['unloading_point_contact_phone_number'];
    }

    /**
     * Sets unloading_point_contact_phone_number
     *
     * @param string $unloading_point_contact_phone_number unloading_point_contact_phone_number
     *
     * @return $this
     */
    public function setUnloadingPointContactPhoneNumber($unloading_point_contact_phone_number)
    {
        $this->container['unloading_point_contact_phone_number'] = $unloading_point_contact_phone_number;

        return $this;
    }

    /**
     * Gets unloading_point_contact_cellphone_number
     *
     * @return string
     */
    public function getUnloadingPointContactCellphoneNumber()
    {
        return $this->container['unloading_point_contact_cellphone_number'];
    }

    /**
     * Sets unloading_point_contact_cellphone_number
     *
     * @param string $unloading_point_contact_cellphone_number unloading_point_contact_cellphone_number
     *
     * @return $this
     */
    public function setUnloadingPointContactCellphoneNumber($unloading_point_contact_cellphone_number)
    {
        $this->container['unloading_point_contact_cellphone_number'] = $unloading_point_contact_cellphone_number;

        return $this;
    }

    /**
     * Gets unloading_point_contact_fax_number
     *
     * @return string
     */
    public function getUnloadingPointContactFaxNumber()
    {
        return $this->container['unloading_point_contact_fax_number'];
    }

    /**
     * Sets unloading_point_contact_fax_number
     *
     * @param string $unloading_point_contact_fax_number unloading_point_contact_fax_number
     *
     * @return $this
     */
    public function setUnloadingPointContactFaxNumber($unloading_point_contact_fax_number)
    {
        $this->container['unloading_point_contact_fax_number'] = $unloading_point_contact_fax_number;

        return $this;
    }

    /**
     * Gets unloading_point_contact_email
     *
     * @return string
     */
    public function getUnloadingPointContactEmail()
    {
        return $this->container['unloading_point_contact_email'];
    }

    /**
     * Sets unloading_point_contact_email
     *
     * @param string $unloading_point_contact_email unloading_point_contact_email
     *
     * @return $this
     */
    public function setUnloadingPointContactEmail($unloading_point_contact_email)
    {
        $this->container['unloading_point_contact_email'] = $unloading_point_contact_email;

        return $this;
    }

    /**
     * Gets unloading_point_address_number
     *
     * @return string
     */
    public function getUnloadingPointAddressNumber()
    {
        return $this->container['unloading_point_address_number'];
    }

    /**
     * Sets unloading_point_address_number
     *
     * @param string $unloading_point_address_number unloading_point_address_number
     *
     * @return $this
     */
    public function setUnloadingPointAddressNumber($unloading_point_address_number)
    {
        $this->container['unloading_point_address_number'] = $unloading_point_address_number;

        return $this;
    }

    /**
     * Gets unloading_point_address_street_name
     *
     * @return string
     */
    public function getUnloadingPointAddressStreetName()
    {
        return $this->container['unloading_point_address_street_name'];
    }

    /**
     * Sets unloading_point_address_street_name
     *
     * @param string $unloading_point_address_street_name unloading_point_address_street_name
     *
     * @return $this
     */
    public function setUnloadingPointAddressStreetName($unloading_point_address_street_name)
    {
        $this->container['unloading_point_address_street_name'] = $unloading_point_address_street_name;

        return $this;
    }

    /**
     * Gets unloading_point_address_complement
     *
     * @return string
     */
    public function getUnloadingPointAddressComplement()
    {
        return $this->container['unloading_point_address_complement'];
    }

    /**
     * Sets unloading_point_address_complement
     *
     * @param string $unloading_point_address_complement unloading_point_address_complement
     *
     * @return $this
     */
    public function setUnloadingPointAddressComplement($unloading_point_address_complement)
    {
        $this->container['unloading_point_address_complement'] = $unloading_point_address_complement;

        return $this;
    }

    /**
     * Gets unloading_point_address_postcode
     *
     * @return string
     */
    public function getUnloadingPointAddressPostcode()
    {
        return $this->container['unloading_point_address_postcode'];
    }

    /**
     * Sets unloading_point_address_postcode
     *
     * @param string $unloading_point_address_postcode unloading_point_address_postcode
     *
     * @return $this
     */
    public function setUnloadingPointAddressPostcode($unloading_point_address_postcode)
    {
        $this->container['unloading_point_address_postcode'] = $unloading_point_address_postcode;

        return $this;
    }

    /**
     * Gets unloading_point_address_zone
     *
     * @return string
     */
    public function getUnloadingPointAddressZone()
    {
        return $this->container['unloading_point_address_zone'];
    }

    /**
     * Sets unloading_point_address_zone
     *
     * @param string $unloading_point_address_zone unloading_point_address_zone
     *
     * @return $this
     */
    public function setUnloadingPointAddressZone($unloading_point_address_zone)
    {
        $this->container['unloading_point_address_zone'] = $unloading_point_address_zone;

        return $this;
    }

    /**
     * Gets unloading_point_address_city
     *
     * @return string
     */
    public function getUnloadingPointAddressCity()
    {
        return $this->container['unloading_point_address_city'];
    }

    /**
     * Sets unloading_point_address_city
     *
     * @param string $unloading_point_address_city unloading_point_address_city
     *
     * @return $this
     */
    public function setUnloadingPointAddressCity($unloading_point_address_city)
    {
        $this->container['unloading_point_address_city'] = $unloading_point_address_city;

        return $this;
    }

    /**
     * Gets unloading_point_address_country
     *
     * @return string
     */
    public function getUnloadingPointAddressCountry()
    {
        return $this->container['unloading_point_address_country'];
    }

    /**
     * Sets unloading_point_address_country
     *
     * @param string $unloading_point_address_country unloading_point_address_country
     *
     * @return $this
     */
    public function setUnloadingPointAddressCountry($unloading_point_address_country)
    {
        $this->container['unloading_point_address_country'] = $unloading_point_address_country;

        return $this;
    }

    /**
     * Gets unloading_point_address_country_code
     *
     * @return string
     */
    public function getUnloadingPointAddressCountryCode()
    {
        return $this->container['unloading_point_address_country_code'];
    }

    /**
     * Sets unloading_point_address_country_code
     *
     * @param string $unloading_point_address_country_code unloading_point_address_country_code
     *
     * @return $this
     */
    public function setUnloadingPointAddressCountryCode($unloading_point_address_country_code)
    {
        $allowedValues = $this->getUnloadingPointAddressCountryCodeAllowableValues();
        if (!is_null($unloading_point_address_country_code) && !in_array($unloading_point_address_country_code, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'unloading_point_address_country_code', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['unloading_point_address_country_code'] = $unloading_point_address_country_code;

        return $this;
    }

    /**
     * Gets unloading_point_address_gps_coordinates
     *
     * @return \Swagger\Client\Model\GeoJsonPoint
     */
    public function getUnloadingPointAddressGpsCoordinates()
    {
        return $this->container['unloading_point_address_gps_coordinates'];
    }

    /**
     * Sets unloading_point_address_gps_coordinates
     *
     * @param \Swagger\Client\Model\GeoJsonPoint $unloading_point_address_gps_coordinates unloading_point_address_gps_coordinates
     *
     * @return $this
     */
    public function setUnloadingPointAddressGpsCoordinates($unloading_point_address_gps_coordinates)
    {
        $this->container['unloading_point_address_gps_coordinates'] = $unloading_point_address_gps_coordinates;

        return $this;
    }

    /**
     * Gets unloading_point_address_complementary_informations
     *
     * @return string
     */
    public function getUnloadingPointAddressComplementaryInformations()
    {
        return $this->container['unloading_point_address_complementary_informations'];
    }

    /**
     * Sets unloading_point_address_complementary_informations
     *
     * @param string $unloading_point_address_complementary_informations unloading_point_address_complementary_informations
     *
     * @return $this
     */
    public function setUnloadingPointAddressComplementaryInformations($unloading_point_address_complementary_informations)
    {
        $this->container['unloading_point_address_complementary_informations'] = $unloading_point_address_complementary_informations;

        return $this;
    }

    /**
     * Gets picking_date_start
     *
     * @return \DateTime
     */
    public function getPickingDateStart()
    {
        return $this->container['picking_date_start'];
    }

    /**
     * Sets picking_date_start
     *
     * @param \DateTime $picking_date_start picking_date_start
     *
     * @return $this
     */
    public function setPickingDateStart($picking_date_start)
    {
        $this->container['picking_date_start'] = $picking_date_start;

        return $this;
    }

    /**
     * Gets picking_date_end
     *
     * @return \DateTime
     */
    public function getPickingDateEnd()
    {
        return $this->container['picking_date_end'];
    }

    /**
     * Sets picking_date_end
     *
     * @param \DateTime $picking_date_end picking_date_end
     *
     * @return $this
     */
    public function setPickingDateEnd($picking_date_end)
    {
        $this->container['picking_date_end'] = $picking_date_end;

        return $this;
    }

    /**
     * Gets picking_time_start
     *
     * @return string
     */
    public function getPickingTimeStart()
    {
        return $this->container['picking_time_start'];
    }

    /**
     * Sets picking_time_start
     *
     * @param string $picking_time_start picking_time_start
     *
     * @return $this
     */
    public function setPickingTimeStart($picking_time_start)
    {
        $this->container['picking_time_start'] = $picking_time_start;

        return $this;
    }

    /**
     * Gets picking_time_end
     *
     * @return string
     */
    public function getPickingTimeEnd()
    {
        return $this->container['picking_time_end'];
    }

    /**
     * Sets picking_time_end
     *
     * @param string $picking_time_end picking_time_end
     *
     * @return $this
     */
    public function setPickingTimeEnd($picking_time_end)
    {
        $this->container['picking_time_end'] = $picking_time_end;

        return $this;
    }

    /**
     * Gets desired_delivery_date_start
     *
     * @return string
     */
    public function getDesiredDeliveryDateStart()
    {
        return $this->container['desired_delivery_date_start'];
    }

    /**
     * Sets desired_delivery_date_start
     *
     * @param string $desired_delivery_date_start desired_delivery_date_start
     *
     * @return $this
     */
    public function setDesiredDeliveryDateStart($desired_delivery_date_start)
    {
        $this->container['desired_delivery_date_start'] = $desired_delivery_date_start;

        return $this;
    }

    /**
     * Gets desired_delivery_date_end
     *
     * @return string
     */
    public function getDesiredDeliveryDateEnd()
    {
        return $this->container['desired_delivery_date_end'];
    }

    /**
     * Sets desired_delivery_date_end
     *
     * @param string $desired_delivery_date_end desired_delivery_date_end
     *
     * @return $this
     */
    public function setDesiredDeliveryDateEnd($desired_delivery_date_end)
    {
        $this->container['desired_delivery_date_end'] = $desired_delivery_date_end;

        return $this;
    }

    /**
     * Gets desired_delivery_time_start
     *
     * @return string
     */
    public function getDesiredDeliveryTimeStart()
    {
        return $this->container['desired_delivery_time_start'];
    }

    /**
     * Sets desired_delivery_time_start
     *
     * @param string $desired_delivery_time_start desired_delivery_time_start
     *
     * @return $this
     */
    public function setDesiredDeliveryTimeStart($desired_delivery_time_start)
    {
        $this->container['desired_delivery_time_start'] = $desired_delivery_time_start;

        return $this;
    }

    /**
     * Gets desired_delivery_time_end
     *
     * @return string
     */
    public function getDesiredDeliveryTimeEnd()
    {
        return $this->container['desired_delivery_time_end'];
    }

    /**
     * Sets desired_delivery_time_end
     *
     * @param string $desired_delivery_time_end desired_delivery_time_end
     *
     * @return $this
     */
    public function setDesiredDeliveryTimeEnd($desired_delivery_time_end)
    {
        $this->container['desired_delivery_time_end'] = $desired_delivery_time_end;

        return $this;
    }

    /**
     * Gets route_with_toll
     *
     * @return \Swagger\Client\Model\Route
     */
    public function getRouteWithToll()
    {
        return $this->container['route_with_toll'];
    }

    /**
     * Sets route_with_toll
     *
     * @param \Swagger\Client\Model\Route $route_with_toll route_with_toll
     *
     * @return $this
     */
    public function setRouteWithToll($route_with_toll)
    {
        $this->container['route_with_toll'] = $route_with_toll;

        return $this;
    }

    /**
     * Gets route_without_toll
     *
     * @return \Swagger\Client\Model\Route
     */
    public function getRouteWithoutToll()
    {
        return $this->container['route_without_toll'];
    }

    /**
     * Sets route_without_toll
     *
     * @param \Swagger\Client\Model\Route $route_without_toll route_without_toll
     *
     * @return $this
     */
    public function setRouteWithoutToll($route_without_toll)
    {
        $this->container['route_without_toll'] = $route_without_toll;

        return $this;
    }

    /**
     * Gets search_context
     *
     * @return \Swagger\Client\Model\SearchContext
     */
    public function getSearchContext()
    {
        return $this->container['search_context'];
    }

    /**
     * Sets search_context
     *
     * @param \Swagger\Client\Model\SearchContext $search_context search_context
     *
     * @return $this
     */
    public function setSearchContext($search_context)
    {
        $this->container['search_context'] = $search_context;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets complementary_informations
     *
     * @return object
     */
    public function getComplementaryInformations()
    {
        return $this->container['complementary_informations'];
    }

    /**
     * Sets complementary_informations
     *
     * @param object $complementary_informations complementary_informations
     *
     * @return $this
     */
    public function setComplementaryInformations($complementary_informations)
    {
        $this->container['complementary_informations'] = $complementary_informations;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


