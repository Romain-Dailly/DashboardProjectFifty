/**
 * Fifty Truck API
 * This is the API of fifty truck
 *
 * OpenAPI spec version: 0.1.0
 * Contact: contact@fiftytruck.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { GeoJsonPoint } from './GeoJsonPoint';
import { ProductGroup } from './ProductGroup';
import { Route } from './Route';
import { SearchContext } from './SearchContext';


export interface SeizedShippingOrder { 
    id?: number;
    operatorId?: number;
    externalId?: string;
    source?: string;
    shipperCompanyName?: string;
    shipperLogo?: string;
    shipperContactName?: string;
    shipperContactPhoneNumber?: string;
    shipperContactCellphoneNumber?: string;
    shipperContactFaxNumber?: string;
    shipperContactEmail?: string;
    shipperPrice?: number;
    seizedPrice?: number;
    productGroup?: ProductGroup;
    goodType?: SeizedShippingOrder.GoodTypeEnum;
    truckTypes?: Array<SeizedShippingOrder.TruckTypesEnum>;
    loadingPointContactFirstName?: string;
    loadingPointContactLastName?: string;
    loadingPointContactCompanyName?: string;
    loadingPointContactPhoneNumber?: string;
    loadingPointContactCellphoneNumber?: string;
    loadingPointContactFaxNumber?: string;
    loadingPointContactEmail?: string;
    loadingPointAddressNumber?: string;
    loadingPointAddressStreetName?: string;
    loadingPointAddressComplement?: string;
    loadingPointAddressPostcode?: string;
    loadingPointAddressZone?: string;
    loadingPointAddressCity?: string;
    loadingPointAddressCountry?: string;
    loadingPointAddressCountryCode?: SeizedShippingOrder.LoadingPointAddressCountryCodeEnum;
    loadingPointAddressGpsCoordinates?: GeoJsonPoint;
    loadingPointAddressComplementaryInformations?: string;
    unloadingPointContactFirstName?: string;
    unloadingPointContactLastName?: string;
    unloadingPointContactCompanyName?: string;
    unloadingPointContactPhoneNumber?: string;
    unloadingPointContactCellphoneNumber?: string;
    unloadingPointContactFaxNumber?: string;
    unloadingPointContactEmail?: string;
    unloadingPointAddressNumber?: string;
    unloadingPointAddressStreetName?: string;
    unloadingPointAddressComplement?: string;
    unloadingPointAddressPostcode?: string;
    unloadingPointAddressZone?: string;
    unloadingPointAddressCity?: string;
    unloadingPointAddressCountry?: string;
    unloadingPointAddressCountryCode?: SeizedShippingOrder.UnloadingPointAddressCountryCodeEnum;
    unloadingPointAddressGpsCoordinates?: GeoJsonPoint;
    unloadingPointAddressComplementaryInformations?: string;
    pickingDateStart?: string;
    pickingDateEnd?: string;
    pickingTimeStart?: string;
    pickingTimeEnd?: string;
    desiredDeliveryDateStart?: string;
    desiredDeliveryDateEnd?: string;
    desiredDeliveryTimeStart?: string;
    desiredDeliveryTimeEnd?: string;
    routeWithToll?: Route;
    routeWithoutToll?: Route;
    searchContext?: SearchContext;
    createdAt?: string;
    updatedAt?: string;
    complementaryInformations?: any;
}
export namespace SeizedShippingOrder {
    export type GoodTypeEnum = 'all' | 'bulky_transport' | 'containers' | 'exceptional_transport' | 'general_merchandise' | 'governed_temperature' | 'messaging' | 'moving' | 'skips' | 'tankers';
    export const GoodTypeEnum = {
        All: 'all' as GoodTypeEnum,
        BulkyTransport: 'bulky_transport' as GoodTypeEnum,
        Containers: 'containers' as GoodTypeEnum,
        ExceptionalTransport: 'exceptional_transport' as GoodTypeEnum,
        GeneralMerchandise: 'general_merchandise' as GoodTypeEnum,
        GovernedTemperature: 'governed_temperature' as GoodTypeEnum,
        Messaging: 'messaging' as GoodTypeEnum,
        Moving: 'moving' as GoodTypeEnum,
        Skips: 'skips' as GoodTypeEnum,
        Tankers: 'tankers' as GoodTypeEnum
    };
    export type TruckTypesEnum = 'all' | '20_feet' | '40_feet' | 'flat_bed' | 'general_other' | 'taut' | 'van' | 'charges' | 'frozen_food' | 'multi_temperature' | 'non_refrigerated' | 'governed_temperature_other' | 'category_1' | 'category_2' | 'category_3' | 'cereal_lorry' | 'moving_bottom' | 'skips_other' | 'reinforced' | 'liquid' | 'tankers_other' | 'silo';
    export const TruckTypesEnum = {
        All: 'all' as TruckTypesEnum,
        _20Feet: '20_feet' as TruckTypesEnum,
        _40Feet: '40_feet' as TruckTypesEnum,
        FlatBed: 'flat_bed' as TruckTypesEnum,
        GeneralOther: 'general_other' as TruckTypesEnum,
        Taut: 'taut' as TruckTypesEnum,
        Van: 'van' as TruckTypesEnum,
        Charges: 'charges' as TruckTypesEnum,
        FrozenFood: 'frozen_food' as TruckTypesEnum,
        MultiTemperature: 'multi_temperature' as TruckTypesEnum,
        NonRefrigerated: 'non_refrigerated' as TruckTypesEnum,
        GovernedTemperatureOther: 'governed_temperature_other' as TruckTypesEnum,
        Category1: 'category_1' as TruckTypesEnum,
        Category2: 'category_2' as TruckTypesEnum,
        Category3: 'category_3' as TruckTypesEnum,
        CerealLorry: 'cereal_lorry' as TruckTypesEnum,
        MovingBottom: 'moving_bottom' as TruckTypesEnum,
        SkipsOther: 'skips_other' as TruckTypesEnum,
        Reinforced: 'reinforced' as TruckTypesEnum,
        Liquid: 'liquid' as TruckTypesEnum,
        TankersOther: 'tankers_other' as TruckTypesEnum,
        Silo: 'silo' as TruckTypesEnum
    };
    export type LoadingPointAddressCountryCodeEnum = 'AD' | 'AL' | 'AT' | 'BA' | 'BE' | 'BG' | 'BY' | 'CH' | 'CY' | 'CZ' | 'DE' | 'DK' | 'EE' | 'ES' | 'FI' | 'FO' | 'FR' | 'GB' | 'GI' | 'GR' | 'HR' | 'HU' | 'IE' | 'IM' | 'IS' | 'IT' | 'LI' | 'LT' | 'LU' | 'LV' | 'MC' | 'MD' | 'ME' | 'MK' | 'MT' | 'NL' | 'NO' | 'PL' | 'PT' | 'RO' | 'RS' | 'RU' | 'SE' | 'SI' | 'SK' | 'SM' | 'UA' | 'VA';
    export const LoadingPointAddressCountryCodeEnum = {
        AD: 'AD' as LoadingPointAddressCountryCodeEnum,
        AL: 'AL' as LoadingPointAddressCountryCodeEnum,
        AT: 'AT' as LoadingPointAddressCountryCodeEnum,
        BA: 'BA' as LoadingPointAddressCountryCodeEnum,
        BE: 'BE' as LoadingPointAddressCountryCodeEnum,
        BG: 'BG' as LoadingPointAddressCountryCodeEnum,
        BY: 'BY' as LoadingPointAddressCountryCodeEnum,
        CH: 'CH' as LoadingPointAddressCountryCodeEnum,
        CY: 'CY' as LoadingPointAddressCountryCodeEnum,
        CZ: 'CZ' as LoadingPointAddressCountryCodeEnum,
        DE: 'DE' as LoadingPointAddressCountryCodeEnum,
        DK: 'DK' as LoadingPointAddressCountryCodeEnum,
        EE: 'EE' as LoadingPointAddressCountryCodeEnum,
        ES: 'ES' as LoadingPointAddressCountryCodeEnum,
        FI: 'FI' as LoadingPointAddressCountryCodeEnum,
        FO: 'FO' as LoadingPointAddressCountryCodeEnum,
        FR: 'FR' as LoadingPointAddressCountryCodeEnum,
        GB: 'GB' as LoadingPointAddressCountryCodeEnum,
        GI: 'GI' as LoadingPointAddressCountryCodeEnum,
        GR: 'GR' as LoadingPointAddressCountryCodeEnum,
        HR: 'HR' as LoadingPointAddressCountryCodeEnum,
        HU: 'HU' as LoadingPointAddressCountryCodeEnum,
        IE: 'IE' as LoadingPointAddressCountryCodeEnum,
        IM: 'IM' as LoadingPointAddressCountryCodeEnum,
        IS: 'IS' as LoadingPointAddressCountryCodeEnum,
        IT: 'IT' as LoadingPointAddressCountryCodeEnum,
        LI: 'LI' as LoadingPointAddressCountryCodeEnum,
        LT: 'LT' as LoadingPointAddressCountryCodeEnum,
        LU: 'LU' as LoadingPointAddressCountryCodeEnum,
        LV: 'LV' as LoadingPointAddressCountryCodeEnum,
        MC: 'MC' as LoadingPointAddressCountryCodeEnum,
        MD: 'MD' as LoadingPointAddressCountryCodeEnum,
        ME: 'ME' as LoadingPointAddressCountryCodeEnum,
        MK: 'MK' as LoadingPointAddressCountryCodeEnum,
        MT: 'MT' as LoadingPointAddressCountryCodeEnum,
        NL: 'NL' as LoadingPointAddressCountryCodeEnum,
        NO: 'NO' as LoadingPointAddressCountryCodeEnum,
        PL: 'PL' as LoadingPointAddressCountryCodeEnum,
        PT: 'PT' as LoadingPointAddressCountryCodeEnum,
        RO: 'RO' as LoadingPointAddressCountryCodeEnum,
        RS: 'RS' as LoadingPointAddressCountryCodeEnum,
        RU: 'RU' as LoadingPointAddressCountryCodeEnum,
        SE: 'SE' as LoadingPointAddressCountryCodeEnum,
        SI: 'SI' as LoadingPointAddressCountryCodeEnum,
        SK: 'SK' as LoadingPointAddressCountryCodeEnum,
        SM: 'SM' as LoadingPointAddressCountryCodeEnum,
        UA: 'UA' as LoadingPointAddressCountryCodeEnum,
        VA: 'VA' as LoadingPointAddressCountryCodeEnum
    };
    export type UnloadingPointAddressCountryCodeEnum = 'AD' | 'AL' | 'AT' | 'BA' | 'BE' | 'BG' | 'BY' | 'CH' | 'CY' | 'CZ' | 'DE' | 'DK' | 'EE' | 'ES' | 'FI' | 'FO' | 'FR' | 'GB' | 'GI' | 'GR' | 'HR' | 'HU' | 'IE' | 'IM' | 'IS' | 'IT' | 'LI' | 'LT' | 'LU' | 'LV' | 'MC' | 'MD' | 'ME' | 'MK' | 'MT' | 'NL' | 'NO' | 'PL' | 'PT' | 'RO' | 'RS' | 'RU' | 'SE' | 'SI' | 'SK' | 'SM' | 'UA' | 'VA';
    export const UnloadingPointAddressCountryCodeEnum = {
        AD: 'AD' as UnloadingPointAddressCountryCodeEnum,
        AL: 'AL' as UnloadingPointAddressCountryCodeEnum,
        AT: 'AT' as UnloadingPointAddressCountryCodeEnum,
        BA: 'BA' as UnloadingPointAddressCountryCodeEnum,
        BE: 'BE' as UnloadingPointAddressCountryCodeEnum,
        BG: 'BG' as UnloadingPointAddressCountryCodeEnum,
        BY: 'BY' as UnloadingPointAddressCountryCodeEnum,
        CH: 'CH' as UnloadingPointAddressCountryCodeEnum,
        CY: 'CY' as UnloadingPointAddressCountryCodeEnum,
        CZ: 'CZ' as UnloadingPointAddressCountryCodeEnum,
        DE: 'DE' as UnloadingPointAddressCountryCodeEnum,
        DK: 'DK' as UnloadingPointAddressCountryCodeEnum,
        EE: 'EE' as UnloadingPointAddressCountryCodeEnum,
        ES: 'ES' as UnloadingPointAddressCountryCodeEnum,
        FI: 'FI' as UnloadingPointAddressCountryCodeEnum,
        FO: 'FO' as UnloadingPointAddressCountryCodeEnum,
        FR: 'FR' as UnloadingPointAddressCountryCodeEnum,
        GB: 'GB' as UnloadingPointAddressCountryCodeEnum,
        GI: 'GI' as UnloadingPointAddressCountryCodeEnum,
        GR: 'GR' as UnloadingPointAddressCountryCodeEnum,
        HR: 'HR' as UnloadingPointAddressCountryCodeEnum,
        HU: 'HU' as UnloadingPointAddressCountryCodeEnum,
        IE: 'IE' as UnloadingPointAddressCountryCodeEnum,
        IM: 'IM' as UnloadingPointAddressCountryCodeEnum,
        IS: 'IS' as UnloadingPointAddressCountryCodeEnum,
        IT: 'IT' as UnloadingPointAddressCountryCodeEnum,
        LI: 'LI' as UnloadingPointAddressCountryCodeEnum,
        LT: 'LT' as UnloadingPointAddressCountryCodeEnum,
        LU: 'LU' as UnloadingPointAddressCountryCodeEnum,
        LV: 'LV' as UnloadingPointAddressCountryCodeEnum,
        MC: 'MC' as UnloadingPointAddressCountryCodeEnum,
        MD: 'MD' as UnloadingPointAddressCountryCodeEnum,
        ME: 'ME' as UnloadingPointAddressCountryCodeEnum,
        MK: 'MK' as UnloadingPointAddressCountryCodeEnum,
        MT: 'MT' as UnloadingPointAddressCountryCodeEnum,
        NL: 'NL' as UnloadingPointAddressCountryCodeEnum,
        NO: 'NO' as UnloadingPointAddressCountryCodeEnum,
        PL: 'PL' as UnloadingPointAddressCountryCodeEnum,
        PT: 'PT' as UnloadingPointAddressCountryCodeEnum,
        RO: 'RO' as UnloadingPointAddressCountryCodeEnum,
        RS: 'RS' as UnloadingPointAddressCountryCodeEnum,
        RU: 'RU' as UnloadingPointAddressCountryCodeEnum,
        SE: 'SE' as UnloadingPointAddressCountryCodeEnum,
        SI: 'SI' as UnloadingPointAddressCountryCodeEnum,
        SK: 'SK' as UnloadingPointAddressCountryCodeEnum,
        SM: 'SM' as UnloadingPointAddressCountryCodeEnum,
        UA: 'UA' as UnloadingPointAddressCountryCodeEnum,
        VA: 'VA' as UnloadingPointAddressCountryCodeEnum
    };
}
